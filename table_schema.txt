CREATE TABLE Nation (
    nation_id   INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name        VARCHAR(50) NOT NULL,
    comment     TEXT
);


CREATE TABLE Genre (
    genre_id    INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name        VARCHAR(50) NOT NULL,
    description TEXT
);


CREATE TABLE Artist (
    artist_id      INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name           VARCHAR(100) NOT NULL,
    description    TEXT,
    type           VARCHAR(50),
    nation_id      INT NOT NULL REFERENCES Nation(nation_id) ON DELETE NO ACTION
);


CREATE TABLE Album (
    album_id     INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  TEXT,
    release_date DATE,
    length       INTERVAL,
    album_num    INT CHECK (album_num >= 0)
);


CREATE TABLE Track (
    track_id   INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name       VARCHAR(150) NOT NULL,
    length     INTERVAL,
    album_id   INT NOT NULL REFERENCES Album(album_id) ON DELETE CASCADE
);


--  Relationship Tables

-- Artist & Genre (M:N)
CREATE TABLE ArtistGenre (
    artist_id INT NOT NULL REFERENCES Artist(artist_id) ON DELETE CASCADE,
    genre_id  INT NOT NULL REFERENCES Genre(genre_id)   ON DELETE CASCADE,
    PRIMARY KEY (artist_id, genre_id)
);

-- Artist & Album (M:N)
CREATE TABLE ArtistAlbum (
    artist_id INT NOT NULL REFERENCES Artist(artist_id) ON DELETE CASCADE,
    album_id  INT NOT NULL REFERENCES Album(album_id)   ON DELETE CASCADE,
    PRIMARY KEY (artist_id, album_id)
);

-- Artist & Track (M:N)
CREATE TABLE ArtistTrack (
    artist_id INT NOT NULL REFERENCES Artist(artist_id) ON DELETE CASCADE,
    track_id  INT NOT NULL REFERENCES Track(track_id)   ON DELETE CASCADE,
    PRIMARY KEY (artist_id, track_id)
);
